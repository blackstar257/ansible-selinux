name: CI
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    - cron: "0 6 * * 0" # Weekly run
defaults:
  run:
    working-directory: "blackstar257.selinux"
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: "blackstar257.selinux"
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install test dependencies
        run: pip3 install yamllint ansible-lint ansible
      - name: Lint code
        run: |
          yamllint .
          ansible-lint --force-color
  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scenario:
          - centos7
          - rocky8
          - rocky9
        include:
          - scenario: centos7
            image: "quay.io/ansible/molecule-centos:7"
          - scenario: rocky8
            image: "quay.io/ansible/molecule-rockylinux:8"
          - scenario: rocky9
            image: "quay.io/ansible/molecule-rockylinux:9"
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: "blackstar257.selinux"
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install test dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install ansible molecule molecule-plugins[docker] docker
      - name: Run Molecule tests
        run: molecule test
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          MOLECULE_IMAGE: ${{ matrix.image }}
  galaxy:
    name: Galaxy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - lint
      - molecule
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v4
        with:
          path: "blackstar257.selinux"
      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install Ansible
        run: pip3 install ansible-core
      - name: Trigger a new import on Galaxy
        run: >-
          ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
        if: env.GALAXY_API_KEY != null
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}
